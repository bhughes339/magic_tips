{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home NOTE: Unless otherwise stated, the commands featured in the \"Useful MAGIC/CS Tips\" section are designed to be used from the MAGIC front end only.","title":"Home"},{"location":"#home","text":"NOTE: Unless otherwise stated, the commands featured in the \"Useful MAGIC/CS Tips\" section are designed to be used from the MAGIC front end only.","title":"Home"},{"location":"text_ed/","text":"MAGIC Syntax Highlighting Extensions Visual Studio Code ( Installation Instructions ) Sublime Text (no longer maintained)","title":"Text Editor Extensions"},{"location":"text_ed/#magic-syntax-highlighting-extensions","text":"Visual Studio Code ( Installation Instructions ) Sublime Text (no longer maintained)","title":"MAGIC Syntax Highlighting Extensions"},{"location":"magic_tips/data_structures/","text":"Printing Data Structures Output RAF data to a local file \"\"^X^LN,DO{>(:RAF[X],Y)^X N((X:0X)_\"^\")^/RPT[LN+1^LN,\"1\"],Y:0X^/RPT[LN,\"2\"]} %Z.copy.raf.to.pc.flat(^/RPT,\"C:\\Users\\username\\output.txt\",\"\",\"N\") $G Styling: \"\"^X^LN,DO{>(:RAF[X],Y)^X N(\"[\"_X~(\",\":32)_\"] = \")^/RPT[LN+1^LN,\"1\"],Y~(\"^\":32)^/RPT[LN,\"2\"]} %Z.copy.raf.to.pc.flat(^/RPT,\"C:\\Users\\username\\output.txt\",\"\",\"N\") You can import the text file into a spreadsheet (using ^ as the delimiter) to separate the subscripts and data for easy viewing. $G Styling with RAF name and head node: ^:RAF[segments]^RAF,RAF%0~(\",\":32)^BASE \"\"^X^LN,K(/RPT),IF{[RAF] N(\"[\"_BASE_\"] = \")^/RPT[LN+1^LN,\"1\"],[RAF]~(\"^\":32)^/RPT[LN,\"2\"]} DO{>([RAF,X],Y)^X N(\"[\"_BASE_\",\"_X~(\",\":32)_\"] = \")^/RPT[LN+1^LN,\"1\"],Y~(\"^\":32)^/RPT[LN,\"2\"]} %Z.copy.raf.to.pc.flat(^/RPT,\"C:\\Users\\username\\output.txt\"^/PATH,\"\",\"N\") D(30)_\"sh_\"_{/PATH}^# Last line is optional--automatically opens the new file in text editor Print packed data to front end <PACKED DATA>^X 0^CT,IF{E(X#0)'=L(X|0) N(\"Not packed data.\")^#;DO{X IF{U(X)^Y N(\"Piece\",CT:2L,\"-\",Y:0X)^#},CT+1^CT}} Broke out into two lines in case the packed data location is a long string Example: :GXA[\"2\"]^X 0^CT,IF{E(X#0)'=L(X|0) N(\"Not packed data.\")^#;DO{X IF{U(X)^Y N(\"Piece\",CT:2L,\"-\",Y:0X)^#},CT+1^CT}} Safely print subscripts to screen When printing delimited subscript values to screen, append :0X to the variable. This will replace the unprintable characters with spaces. Example: \"\"^CT^X,DO{>*AA[X]^X,N(X:0X)^#,CT+1^CT<50} You can also use translation ( ~ ). X~(\",\":32) will convert unprintable characters to commas. You can use any character in place of the comma (such as \"^\").","title":"Printing data structures"},{"location":"magic_tips/data_structures/#printing-data-structures","text":"","title":"Printing Data Structures"},{"location":"magic_tips/data_structures/#output-raf-data-to-a-local-file","text":"\"\"^X^LN,DO{>(:RAF[X],Y)^X N((X:0X)_\"^\")^/RPT[LN+1^LN,\"1\"],Y:0X^/RPT[LN,\"2\"]} %Z.copy.raf.to.pc.flat(^/RPT,\"C:\\Users\\username\\output.txt\",\"\",\"N\") $G Styling: \"\"^X^LN,DO{>(:RAF[X],Y)^X N(\"[\"_X~(\",\":32)_\"] = \")^/RPT[LN+1^LN,\"1\"],Y~(\"^\":32)^/RPT[LN,\"2\"]} %Z.copy.raf.to.pc.flat(^/RPT,\"C:\\Users\\username\\output.txt\",\"\",\"N\") You can import the text file into a spreadsheet (using ^ as the delimiter) to separate the subscripts and data for easy viewing. $G Styling with RAF name and head node: ^:RAF[segments]^RAF,RAF%0~(\",\":32)^BASE \"\"^X^LN,K(/RPT),IF{[RAF] N(\"[\"_BASE_\"] = \")^/RPT[LN+1^LN,\"1\"],[RAF]~(\"^\":32)^/RPT[LN,\"2\"]} DO{>([RAF,X],Y)^X N(\"[\"_BASE_\",\"_X~(\",\":32)_\"] = \")^/RPT[LN+1^LN,\"1\"],Y~(\"^\":32)^/RPT[LN,\"2\"]} %Z.copy.raf.to.pc.flat(^/RPT,\"C:\\Users\\username\\output.txt\"^/PATH,\"\",\"N\") D(30)_\"sh_\"_{/PATH}^# Last line is optional--automatically opens the new file in text editor","title":"Output RAF data to a local file"},{"location":"magic_tips/data_structures/#print-packed-data-to-front-end","text":"<PACKED DATA>^X 0^CT,IF{E(X#0)'=L(X|0) N(\"Not packed data.\")^#;DO{X IF{U(X)^Y N(\"Piece\",CT:2L,\"-\",Y:0X)^#},CT+1^CT}} Broke out into two lines in case the packed data location is a long string Example: :GXA[\"2\"]^X 0^CT,IF{E(X#0)'=L(X|0) N(\"Not packed data.\")^#;DO{X IF{U(X)^Y N(\"Piece\",CT:2L,\"-\",Y:0X)^#},CT+1^CT}}","title":"Print packed data to front end"},{"location":"magic_tips/data_structures/#safely-print-subscripts-to-screen","text":"When printing delimited subscript values to screen, append :0X to the variable. This will replace the unprintable characters with spaces. Example: \"\"^CT^X,DO{>*AA[X]^X,N(X:0X)^#,CT+1^CT<50} You can also use translation ( ~ ). X~(\",\":32) will convert unprintable characters to commas. You can use any character in place of the comma (such as \"^\").","title":"Safely print subscripts to screen"},{"location":"magic_tips/debugging/","text":"Debugging Recovering from a crash IF{O(%);O(%,1)},IF{O($);O($,%.TREE)},$FE(\"\") Using %Z.ddc %Z.ddc(A,B,C) Arguments: A - String to display when debugger is run B - Specific device to invoke debugger code for C - Specific user mnemonic to invoke debugger code for Example: %Z.ddc(\"Check symbol table\",\"WHUGHES.1\",\"MEDITECH\") Page that explains most of the features in %Z.ddc Modify a symbol in a MAGIC DDC Find the correct symbol table with the \"??\" command. Concatenate the symbol table letter with the variable name and enclose in quotes and square braces. Preface expressions with a semicolon to execute them in a DDC. Example: Modifying the DvN symbol on the C table from a DDC: ;1^[\"CDvN\"] Get crash information from the front end O(/S,$MAC[$MAC]_\"S\"),/R^OS,C(/U),IF{[\"AD\"] O(/S,$FPH([\"AD\"])),/#\"0,\"^PGM,C(/U)},[\"AA\"]:0X:0S:80T^LINE NN(\"Program:\":11L,PGM)N(\"Line:\":11L,LINE)N(\"Error loc:\":11L,[\"AB\"])N(\"OS Version:\",OS)N^# Use this information in the %WS.ERR(\"\") program in directory ME6:XXX.WSERR More info about crash information and the WS.ERR utility can be found here . Get all ASCII values of a string $CHX(\"<STRING>\")","title":"Debugging"},{"location":"magic_tips/debugging/#debugging","text":"","title":"Debugging"},{"location":"magic_tips/debugging/#recovering-from-a-crash","text":"IF{O(%);O(%,1)},IF{O($);O($,%.TREE)},$FE(\"\")","title":"Recovering from a crash"},{"location":"magic_tips/debugging/#using-zddc","text":"%Z.ddc(A,B,C) Arguments: A - String to display when debugger is run B - Specific device to invoke debugger code for C - Specific user mnemonic to invoke debugger code for Example: %Z.ddc(\"Check symbol table\",\"WHUGHES.1\",\"MEDITECH\") Page that explains most of the features in %Z.ddc","title":"Using %Z.ddc"},{"location":"magic_tips/debugging/#modify-a-symbol-in-a-magic-ddc","text":"Find the correct symbol table with the \"??\" command. Concatenate the symbol table letter with the variable name and enclose in quotes and square braces. Preface expressions with a semicolon to execute them in a DDC. Example: Modifying the DvN symbol on the C table from a DDC: ;1^[\"CDvN\"]","title":"Modify a symbol in a MAGIC DDC"},{"location":"magic_tips/debugging/#get-crash-information-from-the-front-end","text":"O(/S,$MAC[$MAC]_\"S\"),/R^OS,C(/U),IF{[\"AD\"] O(/S,$FPH([\"AD\"])),/#\"0,\"^PGM,C(/U)},[\"AA\"]:0X:0S:80T^LINE NN(\"Program:\":11L,PGM)N(\"Line:\":11L,LINE)N(\"Error loc:\":11L,[\"AB\"])N(\"OS Version:\",OS)N^# Use this information in the %WS.ERR(\"\") program in directory ME6:XXX.WSERR More info about crash information and the WS.ERR utility can be found here .","title":"Get crash information from the front end"},{"location":"magic_tips/debugging/#get-all-ascii-values-of-a-string","text":"$CHX(\"<STRING>\")","title":"Get all ASCII values of a string"},{"location":"magic_tips/misc/","text":"Miscellaneous Programmer Utilities $PRU(%) Object Code Search & Print $PRU(%) Select 3. SEARCH Search in background When finished, back to front end $COPY2DOS.FLAT(%.PRU.SEARCH,\"<FILE PATH>\") Example: $COPY2DOS.FLAT(%.PRU.SEARCH,\"C:\\search.txt\") Find the address of a database and open it to the prefix of your choice $FPN(^<PREFIX>) To open to it: O(<PREFIX>,<ADDRESS>) Example: OPEN ADM $FPN(^:) O(:,1N1013076) Rebuild ADM *AA for a PRE IN cancel %ADM.PAT.zcus.dalt.rebuild.aa(\"AA\",\"UNIT\",\"EA\",\"FAC\") Liverpool Womens / Countess: %ADM.PAT.zcus.rebuild.aa(\"AA\",\"UNIT\",\"EA\") Make sure to look at the procedure logic first, so you know what\u2019s happening Using the $VIEW command V <program> OR $VIEW(<program>) Program format: %<DPM>.<Procedure> If nothing is returned: Check to make sure there\u2019s no custom front end running Make sure object code exists for the program Using the FOLLOW program in MAGIC (prints procedure pathways) Go to MA1:XXX.SWM %FOLLOW2(mac,job) mac is the machine, and job is the job number. Example: %FOLLOW2(\"MC1\",1123) Server Status $MCL(0) Move a DPM\u2019s Data Definitions with a change number in MAGIC NPR In the Procedures section: DPM: The DPM you\u2019d like to move Procedures: zz:zz.just.data.def Include Data Def: Y Remove a change number from MAGIC NPR OPEN NPR Nil out @NPR.APPL.updates for the obsolete change number Kill the child segments Example: OPEN NPR \"\"^&IA[\"ADM\"]R[5.64]UPD[300.01] K(&IA[\"ADM\"]R[5.64]UPD[300.01]) Print list of procedures for a change number OPEN NPR `<APPLICATION>,<RELEASE>,<CHANGE NUMBER>'^{ia,ir,iaU} \"\"^qi^LF,N(iaU)N^#,DO{+(&IA[ia]R[ir]UPD[iaU]D[qi],Y)^qi N(Y|0_._Y|1)^#,LF+1^LF,IF{LF=15 N(\"<Enter>\")^#,#0,\"\"^LF}} Example: OPEN NPR `MRI,5.67,385.05'^{ia,ir,iaU} \"\"^qi^LF,N(iaU)N^#,DO{+(&IA[ia]R[ir]UPD[iaU]D[qi],Y)^qi N(Y|0_._Y|1)^#,LF+1^LF,IF{LF=15 N(\"<Enter>\")^#,#0,\"\"^LF}} Job off a procedure from the front end %Z.bj.start(PGM_NAME,EXT_NAME,UP_TO_10_ARGS) Starts the background job. EXT_NAME is the string that will appear on the lock that is written for the procedure. You can enter anything there. %Z.bj.end.job(EXT_NAME) Ends the job. %Z.bj.check(EXT_NAME) Convert date/time to S(0) format %Z.date.time.to.seconds(<YYYYMMDD>,<HHMM>) Example: %Z.date.time.to.seconds(20150330,0857) = 1106989020 Open Command Return Values Syntax: O(prefix,structure) Value File type 0 Sequential Access File (SAF) 1 Random Access File (RAF) 8 Sequential Access Directory (SAD) 9 Random Access Directory (RAD) Access $T Error Log from %Z.fec $FE.ERR.VIEW(\"\") Find large spool files in MIS OPEN MIS \"\"^X^CT,500^PG,DO{+(*GXA[X],Y)^X IF{PG<Y|11 CT+1^CT,N(\"Spool file\",X,\"-\",Y|11,\"pages\")N(\" ->\",IF{Y|1;\"[No Title]\"})^#}},NN(CT,\"records with over\",PG,\"pages.\")^# Replace 500^PG with the minimum number of spool report pages you want to count. Sorted by number of pages: OPEN MIS K(/BIGSPOOL),\"\"^X,500^PG,DO{+(*GXA[X],Y)^X IF{PG<Y|11 IF{Y|1;\"[No Title]\"}^/BIGSPOOL[Y|11,X]}} \"\"^X^CT,DO{<(/BIGSPOOL[X],Y)^X CT+1^CT,IF{CT\\12=0 N(\"***Continue***\")^#,#0},N(\"Spool file\",X#1S,\"-\",X#0S,\"pages\")N(\" ->\",Y)^#} Firewall tests from the front end %VPN.TEST(\"\") Print to screen to prevent timeout Add this to a loop to prevent timing out, which will write a period to the screen every ten seconds (remember to initialize S): IF{S(0)>S .^#,S(0)+10^S}, Read list of values (one per line) from a local file into slash MAGIC: %Z.dos.read(\"<FILE NAME>\",^/<STRUCTURE>,\"\",1) CS: %Z.win.file.open(\"\")^PATH, O(!(FILE),PATH), 0^CT,DO{!(FILE)T^R {R#0A,R#2A}^/READ[CT+1^CT]} Convert number from one base to another $RADIX(<NUMBER TO CONVERT>,<BASE OF NUMBER>,<BASE TO CONVERT TO>) Example: $RADIX(15,10,16) = 000F Efficient forms of OR and AND Using the OR (!) and AND (&) operators are generally inefficient because they do not use short-circuit evaluation. OR: Use a nested IF statement Example: if A or B or C , DO.THINGS : IF{IF{A;B;C} @DO.THINGS} NOR: Same as OR but use else , or wrap OR inside a @Not Example: if not ( A or B or C ), DO.THINGS : IF{IF{A;B;C}; @DO.THINGS} IF{@Not(IF{A;B;C}) @DO.THINGS} AND: Use else statements and test using negated statements Example: if A and B and C , DO.THINGS : IF{@Not(A); @Not(B); @Not(C); @DO.THINGS} Always try to order the operands from most to least likely to be true. Be careful when refactoring control statements within existing code--there are various \"hacks\" using control statements to hold specific values in variables. Using @Link in MAGIC @Link is a macro used to open an application's prefixes in a procedure. Usage: @Link([prefix],[application],[logical file name],\"[database]\") Quotation marks are optional for the first three arguments You can find the logical file name of the RAF you want to open to in the View Application routine in NPR. Database can be hardcoded or found in the main application's dictionary. Example: @Link(!,ABS,patient.file,\"ABS.LVW\") NOTE: If you are linking a RAF to a different prefix than the one defined in NPR, you need to use the @Chg.prefix macro which tells the translator to reference the new prefix when accessing the RAF. Usage: @Chg.prefix([DPM],[defined prefix],[prefix opened in @Link]) Using the ABS example above: Without @Chg.prefix , @ABS.PAT.account.number translates to :DZ[dz]|2 , which is likely open to another prefix at this point. Calling @Chg.prefix will cause all subsequent references of @ABS.PAT.account.number to translate to !DZ[dz]|2 instead. @Link(!,ABS,patient.file,\"ABS.LVW\") @Chg.prefix(ABS.PAT,:,!) Physical vs Logical nexting Function Operator Physical next > Physical prev < Logical next + Logical prev - Pad external ADM account number with zeroes Oftentimes, site and specialists will provide the shorthand version of an ADM account number, which is difficult to work with internally. This will automatically pad the account number with the appropriate number of zeroes for use in the $G utility (specifically, :AAAI): \"ACCOUNTNUM\"^X,L(X,0,1,2,3,4,5,6,7,8,9)^Y,\\GPARAM|22-L(X)^Z,N((X$Y)_(0:Z)_(X'$Y))^#","title":"Miscellaneous"},{"location":"magic_tips/misc/#miscellaneous","text":"","title":"Miscellaneous"},{"location":"magic_tips/misc/#programmer-utilities","text":"$PRU(%)","title":"Programmer Utilities"},{"location":"magic_tips/misc/#object-code-search-print","text":"$PRU(%) Select 3. SEARCH Search in background When finished, back to front end $COPY2DOS.FLAT(%.PRU.SEARCH,\"<FILE PATH>\") Example: $COPY2DOS.FLAT(%.PRU.SEARCH,\"C:\\search.txt\")","title":"Object Code Search &amp; Print"},{"location":"magic_tips/misc/#find-the-address-of-a-database-and-open-it-to-the-prefix-of-your-choice","text":"$FPN(^<PREFIX>) To open to it: O(<PREFIX>,<ADDRESS>) Example: OPEN ADM $FPN(^:) O(:,1N1013076)","title":"Find the address of a database and open it to the prefix of your choice"},{"location":"magic_tips/misc/#rebuild-adm-aa-for-a-pre-in-cancel","text":"%ADM.PAT.zcus.dalt.rebuild.aa(\"AA\",\"UNIT\",\"EA\",\"FAC\") Liverpool Womens / Countess: %ADM.PAT.zcus.rebuild.aa(\"AA\",\"UNIT\",\"EA\") Make sure to look at the procedure logic first, so you know what\u2019s happening","title":"Rebuild ADM *AA for a PRE IN cancel"},{"location":"magic_tips/misc/#using-the-view-command","text":"V <program> OR $VIEW(<program>) Program format: %<DPM>.<Procedure> If nothing is returned: Check to make sure there\u2019s no custom front end running Make sure object code exists for the program","title":"Using the $VIEW command"},{"location":"magic_tips/misc/#using-the-follow-program-in-magic-prints-procedure-pathways","text":"Go to MA1:XXX.SWM %FOLLOW2(mac,job) mac is the machine, and job is the job number. Example: %FOLLOW2(\"MC1\",1123)","title":"Using the FOLLOW program in MAGIC (prints procedure pathways)"},{"location":"magic_tips/misc/#server-status","text":"$MCL(0)","title":"Server Status"},{"location":"magic_tips/misc/#move-a-dpms-data-definitions-with-a-change-number-in-magic-npr","text":"In the Procedures section: DPM: The DPM you\u2019d like to move Procedures: zz:zz.just.data.def Include Data Def: Y","title":"Move a DPM\u2019s Data Definitions with a change number in MAGIC NPR"},{"location":"magic_tips/misc/#remove-a-change-number-from-magic-npr","text":"OPEN NPR Nil out @NPR.APPL.updates for the obsolete change number Kill the child segments Example: OPEN NPR \"\"^&IA[\"ADM\"]R[5.64]UPD[300.01] K(&IA[\"ADM\"]R[5.64]UPD[300.01])","title":"Remove a change number from MAGIC NPR"},{"location":"magic_tips/misc/#print-list-of-procedures-for-a-change-number","text":"OPEN NPR `<APPLICATION>,<RELEASE>,<CHANGE NUMBER>'^{ia,ir,iaU} \"\"^qi^LF,N(iaU)N^#,DO{+(&IA[ia]R[ir]UPD[iaU]D[qi],Y)^qi N(Y|0_._Y|1)^#,LF+1^LF,IF{LF=15 N(\"<Enter>\")^#,#0,\"\"^LF}} Example: OPEN NPR `MRI,5.67,385.05'^{ia,ir,iaU} \"\"^qi^LF,N(iaU)N^#,DO{+(&IA[ia]R[ir]UPD[iaU]D[qi],Y)^qi N(Y|0_._Y|1)^#,LF+1^LF,IF{LF=15 N(\"<Enter>\")^#,#0,\"\"^LF}}","title":"Print list of procedures for a change number"},{"location":"magic_tips/misc/#job-off-a-procedure-from-the-front-end","text":"%Z.bj.start(PGM_NAME,EXT_NAME,UP_TO_10_ARGS) Starts the background job. EXT_NAME is the string that will appear on the lock that is written for the procedure. You can enter anything there. %Z.bj.end.job(EXT_NAME) Ends the job. %Z.bj.check(EXT_NAME)","title":"Job off a procedure from the front end"},{"location":"magic_tips/misc/#convert-datetime-to-s0-format","text":"%Z.date.time.to.seconds(<YYYYMMDD>,<HHMM>) Example: %Z.date.time.to.seconds(20150330,0857) = 1106989020","title":"Convert date/time to S(0) format"},{"location":"magic_tips/misc/#open-command-return-values","text":"Syntax: O(prefix,structure) Value File type 0 Sequential Access File (SAF) 1 Random Access File (RAF) 8 Sequential Access Directory (SAD) 9 Random Access Directory (RAD)","title":"Open Command Return Values"},{"location":"magic_tips/misc/#access-t-error-log-from-zfec","text":"$FE.ERR.VIEW(\"\")","title":"Access $T Error Log from %Z.fec"},{"location":"magic_tips/misc/#find-large-spool-files-in-mis","text":"OPEN MIS \"\"^X^CT,500^PG,DO{+(*GXA[X],Y)^X IF{PG<Y|11 CT+1^CT,N(\"Spool file\",X,\"-\",Y|11,\"pages\")N(\" ->\",IF{Y|1;\"[No Title]\"})^#}},NN(CT,\"records with over\",PG,\"pages.\")^# Replace 500^PG with the minimum number of spool report pages you want to count. Sorted by number of pages: OPEN MIS K(/BIGSPOOL),\"\"^X,500^PG,DO{+(*GXA[X],Y)^X IF{PG<Y|11 IF{Y|1;\"[No Title]\"}^/BIGSPOOL[Y|11,X]}} \"\"^X^CT,DO{<(/BIGSPOOL[X],Y)^X CT+1^CT,IF{CT\\12=0 N(\"***Continue***\")^#,#0},N(\"Spool file\",X#1S,\"-\",X#0S,\"pages\")N(\" ->\",Y)^#}","title":"Find large spool files in MIS"},{"location":"magic_tips/misc/#firewall-tests-from-the-front-end","text":"%VPN.TEST(\"\")","title":"Firewall tests from the front end"},{"location":"magic_tips/misc/#print-to-screen-to-prevent-timeout","text":"Add this to a loop to prevent timing out, which will write a period to the screen every ten seconds (remember to initialize S): IF{S(0)>S .^#,S(0)+10^S},","title":"Print to screen to prevent timeout"},{"location":"magic_tips/misc/#read-list-of-values-one-per-line-from-a-local-file-into-slash","text":"MAGIC: %Z.dos.read(\"<FILE NAME>\",^/<STRUCTURE>,\"\",1) CS: %Z.win.file.open(\"\")^PATH, O(!(FILE),PATH), 0^CT,DO{!(FILE)T^R {R#0A,R#2A}^/READ[CT+1^CT]}","title":"Read list of values (one per line) from a local file into slash"},{"location":"magic_tips/misc/#convert-number-from-one-base-to-another","text":"$RADIX(<NUMBER TO CONVERT>,<BASE OF NUMBER>,<BASE TO CONVERT TO>) Example: $RADIX(15,10,16) = 000F","title":"Convert number from one base to another"},{"location":"magic_tips/misc/#efficient-forms-of-or-and-and","text":"Using the OR (!) and AND (&) operators are generally inefficient because they do not use short-circuit evaluation. OR: Use a nested IF statement Example: if A or B or C , DO.THINGS : IF{IF{A;B;C} @DO.THINGS} NOR: Same as OR but use else , or wrap OR inside a @Not Example: if not ( A or B or C ), DO.THINGS : IF{IF{A;B;C}; @DO.THINGS} IF{@Not(IF{A;B;C}) @DO.THINGS} AND: Use else statements and test using negated statements Example: if A and B and C , DO.THINGS : IF{@Not(A); @Not(B); @Not(C); @DO.THINGS} Always try to order the operands from most to least likely to be true. Be careful when refactoring control statements within existing code--there are various \"hacks\" using control statements to hold specific values in variables.","title":"Efficient forms of OR and AND"},{"location":"magic_tips/misc/#using-link-in-magic","text":"@Link is a macro used to open an application's prefixes in a procedure. Usage: @Link([prefix],[application],[logical file name],\"[database]\") Quotation marks are optional for the first three arguments You can find the logical file name of the RAF you want to open to in the View Application routine in NPR. Database can be hardcoded or found in the main application's dictionary. Example: @Link(!,ABS,patient.file,\"ABS.LVW\") NOTE: If you are linking a RAF to a different prefix than the one defined in NPR, you need to use the @Chg.prefix macro which tells the translator to reference the new prefix when accessing the RAF. Usage: @Chg.prefix([DPM],[defined prefix],[prefix opened in @Link]) Using the ABS example above: Without @Chg.prefix , @ABS.PAT.account.number translates to :DZ[dz]|2 , which is likely open to another prefix at this point. Calling @Chg.prefix will cause all subsequent references of @ABS.PAT.account.number to translate to !DZ[dz]|2 instead. @Link(!,ABS,patient.file,\"ABS.LVW\") @Chg.prefix(ABS.PAT,:,!)","title":"Using @Link in MAGIC"},{"location":"magic_tips/misc/#physical-vs-logical-nexting","text":"Function Operator Physical next > Physical prev < Logical next + Logical prev -","title":"Physical vs Logical nexting"},{"location":"magic_tips/misc/#pad-external-adm-account-number-with-zeroes","text":"Oftentimes, site and specialists will provide the shorthand version of an ADM account number, which is difficult to work with internally. This will automatically pad the account number with the appropriate number of zeroes for use in the $G utility (specifically, :AAAI): \"ACCOUNTNUM\"^X,L(X,0,1,2,3,4,5,6,7,8,9)^Y,\\GPARAM|22-L(X)^Z,N((X$Y)_(0:Z)_(X'$Y))^#","title":"Pad external ADM account number with zeroes"}]}